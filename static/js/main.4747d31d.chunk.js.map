{"version":3,"sources":["store/authSlice.js","store/counterSlice.js","store/index.js","App.js","index.js"],"names":["authSlice","createSlice","name","initialState","isLoggedIn","reducers","logIn","state","logOut","actions","counterSlice","value","increase","action","payload","decrease","store","configureStore","reducer","counter","auth","App","useSelector","dispatch","useDispatch","counterHandler","useCallback","type","useEffect","className","onClick","status","rootElement","document","getElementById","createRoot","render"],"mappings":"sIAEMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAAc,CAAEC,YAAY,GAC5BC,SAAU,CACRC,MAAO,SAACC,GACNA,EAAMH,YAAa,GAErBI,OAAQ,SAACD,GACPA,EAAMH,YAAa,MAKVJ,IAAf,QACO,EAA0BA,EAAUS,QAA5BH,EAAR,EAAQA,MAAOE,EAAf,EAAeA,OCdhBE,EAAeT,YAAY,CAC/BC,KAAM,UACNC,aAAc,CAAEQ,MAAO,GACvBN,SAAU,CACRO,SAAU,SAACL,EAAOM,GAChBN,EAAMI,OAASE,EAAOC,SAExBC,SAAU,SAACR,EAAOM,GAChBN,EAAMI,OAASE,EAAOC,YAKbJ,IAAf,QACO,EAA+BA,EAAaD,QAApCG,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,SCTVC,EAJDC,YAAe,CAC3BC,QAAS,CAAEC,QAAST,EAAcU,KAAMpB,K,OC8C3BqB,MA9Cf,WACE,IAAMd,EAAQe,aAAY,SAACf,GAAD,OAAWA,KAC/BgB,EAAWC,cACXpB,EAAa,kBAAMG,EAAMa,KAAKhB,YAQ9BqB,EAAiBC,uBACrB,SAACC,EAAMhB,GAEHY,EADW,aAATI,EACOf,EAASD,GAETI,EAASJ,MAGtB,CAACY,IAKH,OAHAK,qBAAU,WACRH,EAAe,WAAY,OAC1B,CAACA,IAEF,sBAAKI,UAAU,MAAf,UACE,mDACA,sBAAKA,UAAU,UAAf,sBAAmCtB,EAAMY,QAAQR,SAFnD,wCAIE,gCACE,wBAAQkB,UAAU,MAAMC,QAAS,kBAAML,EAAe,WAAY,MAAlE,wBAGA,wBAAQI,UAAU,MAAMC,QAAS,kBAAML,EAAe,WAAY,KAAlE,2BAIF,8BACE,wBAAQI,UAAU,MAAMC,QAAS,kBAlCjBC,EAkCoC3B,SAhCtDmB,EADEQ,EACOvB,IAEAF,KAJQ,IAACyB,GAkChB,SACG3B,IAAe,SAAW,gBCrC/B4B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAAC,IAAD,CAAUpB,MAAOA,EAAjB,SACE,cAAC,EAAD,W","file":"static/js/main.4747d31d.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: { isLoggedIn: false },\n  reducers: {\n    logIn: (state) => {\n      state.isLoggedIn = true;\n    },\n    logOut: (state) => {\n      state.isLoggedIn = false;\n    }\n  }\n});\n\nexport default authSlice.reducer;\nexport const { logIn, logOut } = authSlice.actions;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: { value: 0 },\n  reducers: {\n    increase: (state, action) => {\n      state.value += action.payload;\n    },\n    decrease: (state, action) => {\n      state.value -= action.payload;\n    }\n  }\n});\n\nexport default counterSlice.reducer;\nexport const { increase, decrease } = counterSlice.actions;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport authSlice from \"./authSlice\";\nimport counterSlice from \"./counterSlice\";\nconst store = configureStore({\n  reducer: { counter: counterSlice, auth: authSlice }\n});\n\nexport default store;\n","import { useCallback, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logIn, logOut } from \"./store/authSlice\";\nimport { increase, decrease } from \"./store/counterSlice\";\nfunction App() {\n  const state = useSelector((state) => state);\n  const dispatch = useDispatch();\n  const isLoggedIn = () => state.auth.isLoggedIn;\n  const loginHandler = (status) => {\n    if (status) {\n      dispatch(logOut());\n    } else {\n      dispatch(logIn());\n    }\n  };\n  const counterHandler = useCallback(\n    (type, value) => {\n      if (type === \"increase\") {\n        dispatch(increase(value));\n      } else {\n        dispatch(decrease(value));\n      }\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    counterHandler(\"increase\", 1000);\n  }, [counterHandler]);\n  return (\n    <div className=\"App\">\n      <h1>Hello Redux Basic</h1>\n      <div className=\"counter\">Counter: {state.counter.value}</div> You, seconds\n      ago Uncommitted changes\n      <div>\n        <button className=\"btn\" onClick={() => counterHandler(\"increase\", 100)}>\n          increase +\n        </button>\n        <button className=\"btn\" onClick={() => counterHandler(\"decrease\", 25)}>\n          decrease -\n        </button>\n      </div>\n      <div>\n        <button className=\"btn\" onClick={() => loginHandler(isLoggedIn())}>\n          {isLoggedIn() ? \"logOut\" : \"login\"}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport {Provider} from 'react-redux'\nimport store from './store/index'\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}